sudo: required
dist: trusty
group: edge

# whitelist
branches:
  only:
    - master

notifications:
  irc:
    channels:
      - "irc.uvt.nl#gitlama"
    template:
      - "%{repository_slug}#%{build_number} %{message} --> %{build_url}"
    skip_join: true

language: cpp

matrix:
  include:
    - os: linux
      compiler: gcc

    - os: linux
      compiler: clang++
      env:
        - OPENMPFLAG=--disable-openmp

    - os: osx
      compiler: clang++

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update;
      sudo apt-get install pkg-config autoconf-archive autotools-dev libicu-dev libxml2-dev libbz2-dev zlib1g-dev libtar-dev libboost-dev libboost-regex-dev expect libexttextcat-dev;
      fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew update;
        brew install pkg-config;
        brew install autoconf-archive;
        brew outdated || brew upgrade icu4c;
        brew outdated || brew upgrade libxml2;
        brew outdated || brew install bzip2;
        brew outdated || brew install zlib;
        brew install libtar;
        brew install libtextcat;
        brew outdated boost || brew upgrade boost;
        brew outdated icu4c || brew install icu4c;
        brew install libtextcat;
      fi
    - git clone https://github.com/LanguageMachines/ticcutils
    - cd ticcutils
    - bash bootstrap.sh
    - ./configure $OPENMPFLAG
    - make
    - sudo make install
    - cd ..
    - git clone https://github.com/LanguageMachines/libfolia
    - cd libfolia
    - bash bootstrap.sh
    - ./configure $OPENMPFLAG
    - make
    - sudo make install
    - cd ..
    - git clone https://github.com/LanguageMachines/uctodata
    - cd uctodata
    - bash bootstrap.sh
    - ./configure $OPENMPFLAG
    - make
    - sudo make install
    - cd ..
    - git clone https://github.com/LanguageMachines/ucto
    - cd ucto
    - bash bootstrap.sh
    - ./configure $OPENMPFLAG
    - make
    - sudo make install
    - cd ..
    - git clone https://github.com/LanguageMachines/timbl
    - cd timbl
    - bash bootstrap.sh
    - ./configure $OPENMPFLAG
    - make
    - sudo make install
    - cd ..
    - git clone https://github.com/LanguageMachines/mbt
    - cd mbt
    - bash bootstrap.sh
    - ./configure $OPENMPFLAG
    - make
    - sudo make install
    - cd ..
    - git clone https://github.com/LanguageMachines/frogdata
    - cd frogdata
    - bash bootstrap.sh
    - ./configure $OPENMPFLAG
    - make
    - sudo make install
    - cd ..

install:
    - bash bootstrap.sh
    - ./configure $OPENMPFLAG
    - cat config.log
    - make
    - sudo make install

script:
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
    - make check
    - git clone https://github.com/LanguageMachines/frogtests.git
    - cd frogtests
    - frog_bin=/usr/local/bin ./testall >&2

after_failure:
    - for file in *.err; do echo ERRORS in $file; cat $file; cat $(echo $file | cut -f -d '.').out; done
    - for file in *.diff; do echo DIFF in $file; head -100 $file; done
    - for file in *.log; do echo SERVER LOGS in $file; cat $file; done
