---   # frog.yml
sudo: required
group: edge
dist: bionic

# whitelist
branches:
  only:
    - master

notifications:
  irc:
    channels:
      - "irc.uvt.nl#gitlama"
    template:
      - "%{repository_slug}#%{build_number}-%{branch} : \
        %{message} --> %{build_url}"
    skip_join: true

language: cpp

matrix:
  include:
    - os: linux
      compiler: g++
      cache: ccache
      env:
        - SCAN=echo

    - os: linux
      compiler: clang++
      cache: ccache
      env:
        - SCAN=scan-build
        - OPENMPFLAG=--disable-openmp

    - os: osx
      compiler: clang++
      cache:
        directories:
          - $HOME/Library/Caches/Homebrew
      before_cache:
        - brew cleanup
      env:
        - SCAN=echo

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update;
      sudo apt-get install pkg-config autoconf-archive autotools-dev ccache;
      sudo apt-get install cppcheck libicu-dev libxml2-dev libbz2-dev;
      sudo apt-get install zlib1g-dev libtar-dev;
      sudo apt-get install expect libexttextcat-dev;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew install pkg-config;
      brew install autoconf-archive;
      brew install telnet;
      brew install libxml2;
      brew install bzip2;
      brew install zlib;
      brew install libtar;
      brew install cppcheck;
      brew install ccache;
      brew install libtextcat;
      brew install icu4c;
      brew install llvm;
      export PATH="/usr/local/opt/llvm/bin:$PATH";
      export LDFLAGS="-L/usr/local/opt/llvm/lib";
      export CXXFLAGS="-I/usr/local/opt/llvm/include";
    fi

  - export PATH="/usr/lib/ccache/bin/:/usr/local/opt/ccache/libexec/:$PATH"

  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/ticcutils
  - cd ticcutils
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/libfolia
  - cd libfolia
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/uctodata
  - cd uctodata
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/ucto
  - cd ucto
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/timbl
  - cd timbl
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/mbt
  - cd mbt
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/mbtserver
  - cd mbtserver
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..
  - git clone --depth=1 --single-branch https://github.com/LanguageMachines/frogdata
  - cd frogdata
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  - make
  - sudo make install
  - cd ..

install:
  - bash bootstrap.sh
  - ./configure $OPENMPFLAG
  #    - cat config.log
  - cppcheck --enable=all --quiet --error-exitcode=0 .
  - $SCAN --status-bugs make
  - make
  - sudo make install

script:
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
  - make check
  - git clone  --depth=1 --single-branch https://github.com/LanguageMachines/frogtests.git;
  - cd frogtests
  - export frog_bin=/usr/local/bin
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      ./testmac >&2 ;
    else
      ./testall.sh >&2 ;
    fi

after_failure:
  - for file in *.diff; do echo DIFF in $file; cat $file; done
  - for file in *.log; do echo SERVER LOGS in $file; cat $file; done
  - for file in *.err; do
      echo ERRORS in $file;
      cat $file; cat $(echo $file| cut -f 1 -d '.').out;
    done
